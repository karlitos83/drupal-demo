<?php

/**
 * @file
 * Install, uninstall and update hooks for Media entity remote image module.
 */

use Drupal\Core\File\FileSystemInterface;

/**
 * Implements hook_install().
 */
function media_entity_remote_image_install() {
  $source = \Drupal::service('extension.list.module')->getPath('media_entity_remote_image') . '/images/icons';
  $destination = \Drupal::config('media.settings')->get('icon_base_uri');
  $file_system_interface = \Drupal::service('file_system');
  $file_system_interface->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);

  // TODO As we are only copying a single icon file,
  // replace the dir scan with a single file.
  $files = $file_system_interface->scanDirectory($source, '/.*\.(png)$/');
  foreach ($files as $file) {
    // When reinstalling the Media entity remote image module we don't want
    // to copy the icons when they already exist. The icons could be replaced
    // (by a contrib module or manually), so we don't want to replace the
    // existing files. Removing the files when we uninstall could also be a
    // problem if the files are referenced somewhere else. Since showing an
    // error that it was not possible to copy the files is also confusing,
    // we silently do nothing.
    if (!file_exists($destination . DIRECTORY_SEPARATOR . $file->filename)) {
      $file_system_interface->copy($file->uri, $destination, FileSystemInterface::EXISTS_ERROR);
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function media_entity_remote_image_uninstall() {
  // Delete the field storage. If not removed it will give the following error.
  // exception Drupal\Core\Config\PreExistingConfigException.
  Drupal::configFactory()->getEditable('field.storage.media.field_media_remote_image')->delete();
}

/**
 * Implements hook_requirements().
 */
function media_entity_remote_image_requirements($phase) {
  $requirements = [];
  if ($phase == 'install') {
    // Provide the fallback in case media module is not installed yet.
    $destination = \Drupal::config('media.settings')->get('icon_base_uri') ?? 'public://media-icons/generic';
    $file_system_interface = \Drupal::service('file_system');
    $file_system_interface->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);
    $is_writable = is_writable($destination);
    $is_directory = is_dir($destination);
    if (!$is_writable || !$is_directory) {
      if (!$is_directory) {
        $error = t('The directory %directory does not exist.', ['%directory' => $destination]);
      }
      else {
        $error = t('The directory %directory is not writable.', ['%directory' => $destination]);
      }
      $description = t('An automated attempt to create this directory failed, possibly due to a permissions problem. To proceed with the installation, either create the directory and modify its permissions manually or ensure that the installer has the permissions to create it automatically. For more information, see INSTALL.txt or the <a href=":handbook_url">online handbook</a>.', [':handbook_url' => 'https://www.drupal.org/server-permissions']);
      if (!empty($error)) {
        $description = $error . ' ' . $description;
        $requirements['media_entity_remote_image']['description'] = $description;
        $requirements['media_entity_remote_image']['severity'] = REQUIREMENT_ERROR;
      }
    }
  }
  return $requirements;
}
